name: Build portable Fish shell

# Controls when the action will run.
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:
    types: [created]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-x86:
    runs-on: ubuntu-latest
    container: alpine:latest
    steps:
    - uses: actions/checkout@v2

    - name: Install Dependencies
      run: |
        apk update 
        apk add wget mc alpine-sdk git g++ make cmake ncurses ncurses-dev ncurses-libs xz pkgconfig

    - name: Setup
      run: |
        cp /__w/fish-portable/fish-portable/enable-static-linking.patch /tmp/enable-static-linking.patch


    - name: Build
      run: /bin/sh build-static-fish.sh

      # Do the upload step
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: fish-linux-x86
        path: |
          /tmp/fish-static.*.gz

    - name: Upload assets
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          /tmp/fish-static.*.gz

  # This workflow contains a single job called "build"
  build_aarch64:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    name: Build on ubuntu-latest aarch64

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup
        run: |
          cp ${{github.workspace}}/enable-static-linking.patch /tmp/enable-static-linking.patch

      - uses: uraimo/run-on-arch-action@v2
        name: Build fish
        id: build
        with:
          arch: aarch64
          distro: alpine_latest
          githubToken: ${{ github.token }}
          dockerRunArgs: |
            --volume "/tmp:/tmp"
          install: |
            apk update 
            apk add wget mc alpine-sdk git g++ make cmake ncurses ncurses-dev ncurses-libs xz pkgconfig
          run: /bin/sh build-static-fish.sh

      # Do the upload step
      - name: Upload artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v2
        with:
          name: fish-linux-aarch64
          path: |
            /tmp/fish-static.*.gz

      - name: Upload assets
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            /tmp/fish-static.*.gz

